{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/dungvu/Codes/landinganimation/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2,_templateObject3;import React,{useContext}from'react';import styled from'styled-components';import{AppContext}from'./../App/AppContext';import{Moon,Sun}from'./../icons';var T={Container:styled.main(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n    position: fixed;\\n    z-index: 1;\\n    top: 1rem;\\n    right: 1rem;\\n    display: flex;\\n    flex: 1;\\n    align-items: center;\\n    justify-content: center;\\n\\n    :active {\\n      -webkit-transform: scale(0.9);\\n      transform: scale(0.9);\\n    }\\n  \"]))),Toggle:styled.input(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n    display: none;\\n  \"]))),Switch:styled.label(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n    cursor: pointer;\\n    display: flex;\\n    width: 1.5rem;\\n    height: 1.5rem;\\n    padding: 0.75rem;\\n    background-color: \",\";\\n    border-radius: 25%;\\n    box-shadow: 0 0 0.25rem 0.25rem rgba(128, 128, 128, 0.25);\\n    align-items: center;\\n    justify-content: center;\\n    transition: background-color 0.5s linear;\\n    font-size: 0.5rem;\\n  \"])),function(_ref){var theme=_ref.theme;return theme.shadowColor;})};export var Toggle=function Toggle(){var _useContext=useContext(AppContext),isDark=_useContext.isDark,setIsDark=_useContext.setIsDark,theme=_useContext.theme;return/*#__PURE__*/React.createElement(T.Container,null,/*#__PURE__*/React.createElement(T.Toggle,{id:\"toggle\",name:\"toggle\",type:\"checkbox\",checked:isDark,onChange:function onChange(e){return setIsDark(e.target.checked);}}),/*#__PURE__*/React.createElement(T.Switch,{theme:theme,htmlFor:\"toggle\"},isDark?/*#__PURE__*/React.createElement(Moon,null):/*#__PURE__*/React.createElement(Sun,null)));};","map":{"version":3,"sources":["/Users/dungvu/Codes/landinganimation/src/components/Toggle.jsx"],"names":["React","useContext","styled","AppContext","Moon","Sun","T","Container","main","Toggle","input","Switch","label","theme","shadowColor","isDark","setIsDark","e","target","checked"],"mappings":"iOAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,KAAkC,OAAlC,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CAEA,OAASC,UAAT,KAA2B,qBAA3B,CACA,OAASC,IAAT,CAAeC,GAAf,KAA0B,YAA1B,CAEA,GAAMC,CAAAA,CAAC,CAAG,CACRC,SAAS,CAAEL,MAAM,CAACM,IAAT,oUADD,CAgBRC,MAAM,CAAEP,MAAM,CAACQ,KAAT,2FAhBE,CAmBRC,MAAM,CAAET,MAAM,CAACU,KAAT,qaAMgB,kBAAGC,CAAAA,KAAH,MAAGA,KAAH,OAAeA,CAAAA,KAAK,CAACC,WAArB,EANhB,CAnBE,CAAV,CAmCA,MAAO,IAAML,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAM,iBACWR,UAAU,CAACE,UAAD,CADrB,CAClBY,MADkB,aAClBA,MADkB,CACVC,SADU,aACVA,SADU,CACCH,KADD,aACCA,KADD,CAG1B,mBACE,oBAAC,CAAD,CAAG,SAAH,mBACE,oBAAC,CAAD,CAAG,MAAH,EAAU,EAAE,CAAC,QAAb,CAAsB,IAAI,CAAC,QAA3B,CAAoC,IAAI,CAAC,UAAzC,CAAoD,OAAO,CAAEE,MAA7D,CAAqE,QAAQ,CAAE,kBAACE,CAAD,QAAOD,CAAAA,SAAS,CAACC,CAAC,CAACC,MAAF,CAASC,OAAV,CAAhB,EAA/E,EADF,cAEE,oBAAC,CAAD,CAAG,MAAH,EAAU,KAAK,CAAEN,KAAjB,CAAwB,OAAO,CAAC,QAAhC,EACGE,MAAM,cAAG,oBAAC,IAAD,MAAH,cAAc,oBAAC,GAAD,MADvB,CAFF,CADF,CAQD,CAXM","sourcesContent":["import React, { useContext } from 'react';\nimport styled from 'styled-components';\n\nimport { AppContext } from './../App/AppContext';\nimport { Moon, Sun } from './../icons';\n\nconst T = {\n  Container: styled.main`\n    position: fixed;\n    z-index: 1;\n    top: 1rem;\n    right: 1rem;\n    display: flex;\n    flex: 1;\n    align-items: center;\n    justify-content: center;\n\n    :active {\n      -webkit-transform: scale(0.9);\n      transform: scale(0.9);\n    }\n  `,\n  Toggle: styled.input`\n    display: none;\n  `,\n  Switch: styled.label`\n    cursor: pointer;\n    display: flex;\n    width: 1.5rem;\n    height: 1.5rem;\n    padding: 0.75rem;\n    background-color: ${({ theme }) => theme.shadowColor};\n    border-radius: 25%;\n    box-shadow: 0 0 0.25rem 0.25rem rgba(128, 128, 128, 0.25);\n    align-items: center;\n    justify-content: center;\n    transition: background-color 0.5s linear;\n    font-size: 0.5rem;\n  `,\n};\n\nexport const Toggle = () => {\n  const { isDark, setIsDark, theme } = useContext(AppContext);\n\n  return (\n    <T.Container>\n      <T.Toggle id='toggle' name='toggle' type='checkbox' checked={isDark} onChange={(e) => setIsDark(e.target.checked)} />\n      <T.Switch theme={theme} htmlFor='toggle'>\n        {isDark ? <Moon /> : <Sun />}\n      </T.Switch>\n    </T.Container>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}